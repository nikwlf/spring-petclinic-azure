# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  vmImage: ubuntu-latest
  
variables:
  tag: 'main'
  imageRepository: 'azurePipelines'

jobs:
- job: MyJob
  displayName: My First Job
  continueOnError: true
  workspace:
    clean: outputs
  steps:
  - script: echo My first job

- job: MavenJob
  displayName: Maven Job
  continueOnError: true
  steps:
  - task: Maven@3
    inputs:
      mavenPomFile: 'pom.xml'
      mavenOptions: '-Xmx3072m'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.8'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      goals: 'package'
  - script: find ./
  - publish: $(System.DefaultWorkingDirectory)/target
    artifact: buildTarget

- job: DockerJob
  displayName: Docker Job
  pool:
    vmImage: ubuntu-latest
  dependsOn: MavenJob
  condition: succeeded()
  steps:
  - download: current
    artifact: buildTarget
  - script: find $(Pipeline.Workspace)/
  - task: Docker@2
    displayName: Build
    inputs:
      command: build
      repository: $(imageRepository)
      dockerfile: Dockerfile
      containerRegistry: $(RegistryServiceConnection)
      tags: |
        $(tag)
      arguments: '--build-arg targetFilePath=$(Pipeline.Workspace)/buildTarget'
  - task: Docker@2
    displayName: Push
    inputs:
      command: push
      repository: $(imageRepository)
      dockerfile: Dockerfile
      containerRegistry: $(RegistryServiceConnection)
      tags: |
        $(tag)
